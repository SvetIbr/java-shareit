CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name    VARCHAR NOT NULL,
    email   VARCHAR NOT NULL UNIQUE
    );

CREATE TABLE IF NOT EXISTS requests (
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    description   VARCHAR NOT NULL,
    requestor_id  BIGINT NOT NULL,
    create_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT fk_requests_requestor_id FOREIGN KEY (requestor_id) REFERENCES users (id)
    );

CREATE TABLE IF NOT EXISTS items (
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name          VARCHAR NOT NULL,
    description   VARCHAR NOT NULL,
    is_available  BOOLEAN NOT NULL,
    owner_id      BIGINT NOT NULL,
    request_id    BIGINT,
    CONSTRAINT fk_item_owner_id FOREIGN KEY(owner_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT fk_item_request_id FOREIGN KEY (request_id) REFERENCES requests (id) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS bookings (
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    start_date  TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    end_date    TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    item_id     BIGINT NOT NULL,
    booker_id   BIGINT NOT NULL,
    status      VARCHAR NOT NULL,
    CONSTRAINT fk_bookings_booker_id FOREIGN KEY(booker_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT fk_bookings_item_id FOREIGN KEY (item_id) REFERENCES items (id),
    CONSTRAINT constr_status CHECK (status IN ('WAITING', 'APPROVED', 'REJECTED', 'CANCELED'))
    );

CREATE TABLE IF NOT EXISTS comments (
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text        VARCHAR NOT NULL,
    item_id     BIGINT NOT NULL,
    author_id   BIGINT NOT NULL,
    create_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT fk_comments_to_items FOREIGN KEY (item_id) REFERENCES items (id),
    CONSTRAINT fk_comments_to_users FOREIGN KEY (author_id) REFERENCES users (id)
    );
